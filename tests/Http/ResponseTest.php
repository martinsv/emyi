<?php
/*
 * emyi
 *
 * @link http://github.com/douggr/emyi for the canonical source repository
 * @license http://opensource.org/licenses/MIT MIT License
 */

namespace EmyiTest\Http;

use Emyi\Http\Response;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0
 */
class ResponseTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Response
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Response;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Emyi\Http\Response::fromString
     */
    public function testFromString()
    {
        $string = "HTTP/1.0 200 OK\r\n\r\nFoo Bar";
        $response = Response::fromString($string);
        $this->assertEquals('1.0', $response->getVersion());
        $this->assertEquals(200, $response->getStatusCode());
        $this->assertEquals('Foo Bar', $response->getContent());
    }

    /**
     * @covers Emyi\Http\Response::setStatusCode
     * @covers Emyi\Http\Response::getStatusCode
     */
    public function testGetStatusCode()
    {
        $response = new Response;
        $response->setStatusCode(404);
        $this->assertEquals(404, $response->getStatusCode());
    }

    /**
     * @covers Emyi\Http\Response::getStatusPhrase
     * @todo   Implement testGetStatusPhrase().
     */
    public function testGetStatusPhrase()
    {
        $response = new Response;
        $response->setStatusCode(404);
        $this->assertEquals('Not Found', $response->getStatusPhrase());
    }

    /**
     * @covers Emyi\Http\Response::renderStatusLine
     */
    public function testRenderStatusLine()
    {
        $response = new Response;
        $response->setVersion(1.1);
        $response->setStatusCode(404);
        $this->assertEquals('HTTP/1.1 404 Not Found', $response->renderStatusLine());
    }

    /**
     * @covers Emyi\Http\Response::__toString
     */
    public function test__toString()
    {
        $string = 'HTTP/1.0 200 OK' . "\r\n\r\n" . 'Foo Bar';
        $response = Response::fromString($string);
        $this->assertEquals(200, $response->getStatusCode());
        $this->assertEquals('Foo Bar', $response->getContent());
    }
}
